name: profile-on-pr

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
permissions:
  contents: read

jobs:
  profile:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref:        ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - id: head_timing_metrics
        run: |
          # Extract timing metrics from head branch
          {
            echo 'metrics<<EOF'
            cargo run --features='hotpath,hotpath-ci' --profile hotpath --bin andromeda examples/performance.ts | grep '^{"hotpath_profiling_mode"'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Checkout base
        run: |
          git checkout ${{ github.event.pull_request.base.sha }}

      - id: base_timing_metrics
        run: |
          # Extract timing metrics from base branch
          {
            echo 'metrics<<EOF'
            cargo run --features='hotpath,hotpath-ci' --profile hotpath --bin andromeda examples/performance.ts | grep '^{"hotpath_profiling_mode"'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Save metrics to artifact
        run: |
          mkdir -p /tmp/metrics
          echo '${{ steps.head_timing_metrics.outputs.metrics }}' > /tmp/metrics/head.json
          echo '${{ steps.base_timing_metrics.outputs.metrics }}' > /tmp/metrics/base.json
          echo '${{ github.event.pull_request.number }}' > /tmp/metrics/pr_number.txt

      - uses: actions/upload-artifact@v4
        with:
          name: profile-metrics
          path: /tmp/metrics/
          retention-days: 1

  comment:
    runs-on: ubuntu-latest
    needs: profile
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: profile-metrics
          path: /tmp/metrics/

      - name: Install hotpath CLI
        run: cargo install hotpath

      - name: Post PR comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          HEAD_METRICS=$(cat /tmp/metrics/head.json)
          BASE_METRICS=$(cat /tmp/metrics/base.json)
          PR_NUMBER=$(cat /tmp/metrics/pr_number.txt)
          hotpath profile-pr \
            --head-metrics "$HEAD_METRICS" \
            --base-metrics "$BASE_METRICS" \
            --github-token "$GH_TOKEN" \
            --pr-number "$PR_NUMBER"
